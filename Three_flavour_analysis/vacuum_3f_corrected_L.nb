(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    292578,       5876]
NotebookOptionsPosition[    288981,       5817]
NotebookOutlinePosition[    289473,       5836]
CellTagsIndexPosition[    289430,       5833]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Three Flavor vacuum", "Title",
 CellChangeTimes->{{3.919138108397374*^9, 3.9191381349558706`*^9}, {
  3.919138197544756*^9, 
  3.9191382024890184`*^9}},ExpressionUUID->"a0369676-97f0-42a8-957b-\
298f0d50b416"],

Cell[BoxData[""], "Input",
 CellFrame->{{0, 0}, {0, 3}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.919138140830119*^9, 
  3.919138141611979*^9}},ExpressionUUID->"6e89639c-5773-4419-83ee-\
dbe2b8ceba41"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M11", "=", 
   RowBox[{"M22", "=", 
    RowBox[{"M33", "=", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M12", "=", 
   RowBox[{"M21", "=", 
    RowBox[{"0.759", "*", " ", 
     RowBox[{"10", "^", 
      RowBox[{"-", "4"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M13", "=", 
   RowBox[{"M31", "=", 
    RowBox[{"M23", "=", 
     RowBox[{"M32", "=", 
      RowBox[{"23.2", "*", 
       RowBox[{"10", "^", 
        RowBox[{"\[Minus]", "4"}]}]}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"M11", ",", "M12", ",", "M13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"M21", ",", "M22", ",", "M23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"M31", ",", "M32", ",", "M33"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "10000"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta12", "=", 
    RowBox[{"0.5", "*", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"Sqrt", "[", "0.846", "]"}], "]"}]}]}], ";"}], 
  "                                                ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Arbitrary", " ", "1", " ", "sec"}], "=", " ", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}], " ", "radian"}]}], " ", "*)"}], 
  "          "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta13", "=", 
    RowBox[{"0.5", "*", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"Sqrt", "[", "0.10", "]"}], "]"}]}]}], ";"}], 
  "    "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta23", "=", 
    RowBox[{"0.5", "*", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"Sqrt", "[", "0.97", "]"}], "]"}]}]}], ";"}], "  ", 
  "\[IndentingNewLine]", 
  "                                                                           \
                                                                              \
  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Arbitrary", " ", "1", " ", "sec"}], "=", " ", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}], " ", "radian"}]}], " ", "*)"}], 
  "   "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phase1", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", "*", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phase2", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", "*", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phase3", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", "*", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Phase", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "phase1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "phase2"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Phase", "//", "MatrixForm"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U23", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Cos", "[", "theta23", "]"}], ",", 
       RowBox[{"Sin", "[", "theta23", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "theta23", "]"}]}], ",", 
       RowBox[{"Cos", "[", "theta23", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U23", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U13", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "theta13", "]"}], ",", "0", ",", 
       RowBox[{"Sin", "[", "theta13", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "theta13", "]"}]}], ",", "0", ",", 
       RowBox[{"Cos", "[", "theta13", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U13", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U12", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "theta12", "]"}], ",", 
       RowBox[{"Sin", "[", "theta12", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "theta12", "]"}]}], ",", 
       RowBox[{"Cos", "[", "theta12", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U12", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"U23", ".", "U13", ".", "U12", ".", "Phase"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "//", "MatrixForm"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "=", 
    RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]}], ";"}], 
  "                                                                ", 
  RowBox[{"(*", 
   RowBox[{"define", " ", "a", " ", "variable", " ", "x"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"list1", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "                                                                           \
    ", 
  RowBox[{"(*", 
   RowBox[{"define", " ", "an", " ", "empty", " ", "list"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "Nmax"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", 
      RowBox[{"i", "+", "1"}]}], ",", 
     RowBox[{"j", "<=", "Nmax"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"prod", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"alpha", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"beta", ",", "i"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"alpha", ",", "j"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"beta", ",", "j"}], "]"}], "]"}]}], ")"}], "*", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"1.27", "*", 
           RowBox[{"M", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
           RowBox[{"L", "/", "x"}]}], "]"}], "^", "2"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"realpart", "=", " ", 
       RowBox[{"Re", "[", "prod", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"list1", ",", "realpart"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "list1", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sumReal", "[", "x_", "]"}], "=", 
   RowBox[{"Total", "[", "list1", "]"}]}], "\[IndentingNewLine]", 
  "                                                                           \
                         "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"list2", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "                                                                           \
    ", 
  RowBox[{"(*", 
   RowBox[{
   "define", " ", "an", " ", "empty", " ", "list", " ", "to", " ", "collect", 
    " ", "imaginary", " ", "part"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "Nmax"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", 
      RowBox[{"i", "+", "1"}]}], ",", 
     RowBox[{"j", "<=", "Nmax"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"prod", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"alpha", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"beta", ",", "i"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"alpha", ",", "j"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"beta", ",", "j"}], "]"}], "]"}]}], ")"}], "*", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"1.27", "*", 
           RowBox[{"M", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
           RowBox[{"L", "/", "x"}]}], "]"}], "^", "2"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"impart", "=", " ", 
       RowBox[{"Im", "[", "prod", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"list2", ",", "impart"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sumIm", "[", "x_", "]"}], "=", 
  RowBox[{"Total", "[", "list2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"list2", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Peu", "[", "LE_", "]"}], ":=", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"alpha", "==", "beta"}], ",", "1", ",", "0"}], "]"}], "-", 
    RowBox[{"4", "*", 
     RowBox[{"sumReal", "[", "LE", "]"}]}], "+", 
    RowBox[{"2", "*", 
     RowBox[{"sumIm", "[", "LE", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Peu", "[", "LE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"P1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Peu", "[", "LE", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"LE", ",", "0.01", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", "Full"}], ",", " ", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Survival Probability of electron neutrino in vacuum\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", "\"\<L=10000\>\"", "}"}]}], ",", 
    RowBox[{"PlotTheme", "->", " ", "\"\<Scientific\>\""}], ",", " ", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "0"}], "]"}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"P", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Nu]", "e"], "\[RightArrow]", 
             SubscriptBox["\[Nu]", "e"]}], ")"}]}], "]"}], ",", "None"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"Energy", " ", "in", " ", "GeV"}], "]"}], ",", "None"}], 
        "}"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9191381537462845`*^9, 3.9191381540068502`*^9}, {
   3.91913949764305*^9, 3.919139505520262*^9}, 3.9191409612535667`*^9, {
   3.919140999618726*^9, 3.91914100070595*^9}, {3.9192143360018644`*^9, 
   3.9192143415925417`*^9}, {3.9192233178877687`*^9, 
   3.9192233347289057`*^9}, {3.91922519101923*^9, 3.919225192415701*^9}, {
   3.919238039361662*^9, 3.9192380467377462`*^9}, {3.919238085764867*^9, 
   3.9192381523041153`*^9}, {3.9192381947794333`*^9, 3.919238318016286*^9}, {
   3.9192383630873337`*^9, 3.9192384906019216`*^9}, {3.919238583127666*^9, 
   3.9192386171788797`*^9}, 3.919238666465066*^9, {3.9192386987316527`*^9, 
   3.919238713521104*^9}, {3.9192387780205526`*^9, 3.919238778656407*^9}, {
   3.919238857713895*^9, 3.919238881126721*^9}, {3.919238968427905*^9, 
   3.9192390294062953`*^9}, {3.9192390778594446`*^9, 3.919239078314378*^9}, {
   3.9192391863190393`*^9, 3.919239210064685*^9}, {3.919239569554899*^9, 
   3.9192397239127645`*^9}, {3.9192397921719685`*^9, 3.919239801977746*^9}, {
   3.9192927360459995`*^9, 3.9192927371927814`*^9}, 3.9192985389120235`*^9, {
   3.919305164774886*^9, 3.919305168238157*^9}, 3.9193053128520536`*^9, 
   3.91930542976857*^9, 3.919305500893806*^9, {3.919391565706876*^9, 
   3.919391578656101*^9}, {3.9223473997779922`*^9, 3.922347421934742*^9}, {
   3.92234749788356*^9, 3.9223474980470457`*^9}, {3.922347575976914*^9, 
   3.922347594807728*^9}, {3.9223476286402807`*^9, 3.9223476448296456`*^9}, {
   3.922347899378849*^9, 3.922347941571806*^9}, {3.922349674145831*^9, 
   3.922349675348791*^9}, {3.922349739423012*^9, 3.9223497718649807`*^9}, {
   3.92234985227382*^9, 3.9223498591749945`*^9}, {3.9223499156550245`*^9, 
   3.9223499906661024`*^9}, {3.9223505074329324`*^9, 3.922350512746199*^9}, 
   3.922350588764578*^9, {3.9223516209339447`*^9, 3.922351624572624*^9}, {
   3.922351806054886*^9, 3.9223518193678055`*^9}},
 CellLabel->
  "In[8887]:=",ExpressionUUID->"711177da-3fcf-402c-9d1a-d8b0041025d6"],

Cell[BoxData["10000"], "Output",
 CellChangeTimes->{
  3.919238531620798*^9, {3.919238651069392*^9, 3.9192386671221137`*^9}, 
   3.919238716157689*^9, 3.9192387804657984`*^9, 3.91923888350921*^9, 
   3.91923908004261*^9, {3.9192396249098606`*^9, 3.919239638013102*^9}, {
   3.919239680286228*^9, 3.9192397014871674`*^9}, {3.9192397936856337`*^9, 
   3.919239802601224*^9}, 3.9192927381048875`*^9, 3.9192985493809586`*^9, 
   3.9193051696755767`*^9, 3.9193053138382406`*^9, 3.919305437498528*^9, 
   3.9193055023625374`*^9, 3.9193916349432325`*^9, {3.9223474009774857`*^9, 
   3.9223474252645893`*^9}, 3.9223474985730023`*^9, {3.922347579997273*^9, 
   3.922347595749779*^9}, {3.9223476313769407`*^9, 3.922347649203201*^9}, {
   3.922347924183669*^9, 3.9223479424784303`*^9}, 3.92234978507821*^9, 
   3.9223498601163206`*^9, {3.922349906169799*^9, 3.9223499474766026`*^9}, {
   3.922349980632047*^9, 3.9223499920609365`*^9}, {3.922350578006277*^9, 
   3.922350589501446*^9}, 3.922351625714617*^9, {3.9223518069214983`*^9, 
   3.9223518198644137`*^9}},
 CellLabel->
  "Out[8892]=",ExpressionUUID->"f9b8fd22-ef25-4087-817f-85108aea5d55"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.8236203380255388`", "0.5440507217309376`", "0.1601822430069672`"},
     {
      RowBox[{"-", "0.5080741676517451`"}], "0.5822974134018349`", 
      "0.6346576734827359`"},
     {"0.25201225953449913`", 
      RowBox[{"-", "0.6041014273527074`"}], "0.7560101100611935`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.919238531620798*^9, {3.919238651069392*^9, 3.9192386671221137`*^9}, 
   3.919238716157689*^9, 3.9192387804657984`*^9, 3.91923888350921*^9, 
   3.91923908004261*^9, {3.9192396249098606`*^9, 3.919239638013102*^9}, {
   3.919239680286228*^9, 3.9192397014871674`*^9}, {3.9192397936856337`*^9, 
   3.919239802601224*^9}, 3.9192927381048875`*^9, 3.9192985493809586`*^9, 
   3.9193051696755767`*^9, 3.9193053138382406`*^9, 3.919305437498528*^9, 
   3.9193055023625374`*^9, 3.9193916349432325`*^9, {3.9223474009774857`*^9, 
   3.9223474252645893`*^9}, 3.9223474985730023`*^9, {3.922347579997273*^9, 
   3.922347595749779*^9}, {3.9223476313769407`*^9, 3.922347649203201*^9}, {
   3.922347924183669*^9, 3.9223479424784303`*^9}, 3.92234978507821*^9, 
   3.9223498601163206`*^9, {3.922349906169799*^9, 3.9223499474766026`*^9}, {
   3.922349980632047*^9, 3.9223499920609365`*^9}, {3.922350578006277*^9, 
   3.922350589501446*^9}, 3.922351625714617*^9, {3.9223518069214983`*^9, 
   3.922351819873267*^9}},
 CellLabel->
  "Out[8908]//MatrixForm=",ExpressionUUID->"2d4adad9-c9f9-4c94-bc8d-\
dcee6692b9cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.20078575876884183`", " ", 
    RowBox[{"Re", "[", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox["0.96393`", "x"], "]"}], "2"], "]"}]}], ",", 
   RowBox[{"0.01740535421758714`", " ", 
    RowBox[{"Re", "[", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox["29.464000000000002`", "x"], "]"}], "2"], "]"}]}], ",", 
   RowBox[{"0.007594645782412853`", " ", 
    RowBox[{"Re", "[", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox["29.464000000000002`", "x"], "]"}], "2"], "]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.919238531620798*^9, {3.919238651069392*^9, 3.9192386671221137`*^9}, 
   3.919238716157689*^9, 3.9192387804657984`*^9, 3.91923888350921*^9, 
   3.91923908004261*^9, {3.9192396249098606`*^9, 3.919239638013102*^9}, {
   3.919239680286228*^9, 3.9192397014871674`*^9}, {3.9192397936856337`*^9, 
   3.919239802601224*^9}, 3.9192927381048875`*^9, 3.9192985493809586`*^9, 
   3.9193051696755767`*^9, 3.9193053138382406`*^9, 3.919305437498528*^9, 
   3.9193055023625374`*^9, 3.9193916349432325`*^9, {3.9223474009774857`*^9, 
   3.9223474252645893`*^9}, 3.9223474985730023`*^9, {3.922347579997273*^9, 
   3.922347595749779*^9}, {3.9223476313769407`*^9, 3.922347649203201*^9}, {
   3.922347924183669*^9, 3.9223479424784303`*^9}, 3.92234978507821*^9, 
   3.9223498601163206`*^9, {3.922349906169799*^9, 3.9223499474766026`*^9}, {
   3.922349980632047*^9, 3.9223499920609365`*^9}, {3.922350578006277*^9, 
   3.922350589501446*^9}, 3.922351625714617*^9, {3.9223518069214983`*^9, 
   3.9223518198792896`*^9}},
 CellLabel->
  "Out[8915]=",ExpressionUUID->"584089ea-4a16-4a5b-91a4-c62e1b5e3957"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.20078575876884183`", " ", 
   RowBox[{"Re", "[", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      FractionBox["0.96393`", "x"], "]"}], "2"], "]"}]}], "+", 
  RowBox[{"0.024999999999999994`", " ", 
   RowBox[{"Re", "[", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      FractionBox["29.464000000000002`", "x"], "]"}], "2"], 
    "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.919238531620798*^9, {3.919238651069392*^9, 3.9192386671221137`*^9}, 
   3.919238716157689*^9, 3.9192387804657984`*^9, 3.91923888350921*^9, 
   3.91923908004261*^9, {3.9192396249098606`*^9, 3.919239638013102*^9}, {
   3.919239680286228*^9, 3.9192397014871674`*^9}, {3.9192397936856337`*^9, 
   3.919239802601224*^9}, 3.9192927381048875`*^9, 3.9192985493809586`*^9, 
   3.9193051696755767`*^9, 3.9193053138382406`*^9, 3.919305437498528*^9, 
   3.9193055023625374`*^9, 3.9193916349432325`*^9, {3.9223474009774857`*^9, 
   3.9223474252645893`*^9}, 3.9223474985730023`*^9, {3.922347579997273*^9, 
   3.922347595749779*^9}, {3.9223476313769407`*^9, 3.922347649203201*^9}, {
   3.922347924183669*^9, 3.9223479424784303`*^9}, 3.92234978507821*^9, 
   3.9223498601163206`*^9, {3.922349906169799*^9, 3.9223499474766026`*^9}, {
   3.922349980632047*^9, 3.9223499920609365`*^9}, {3.922350578006277*^9, 
   3.922350589501446*^9}, 3.922351625714617*^9, {3.9223518069214983`*^9, 
   3.9223518198852787`*^9}},
 CellLabel->
  "Out[8916]=",ExpressionUUID->"cbb9d573-ca23-422c-bf96-9d4edbb5164d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.20078575876884183`", " ", 
   RowBox[{"Im", "[", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      FractionBox["0.96393`", "x"], "]"}], "2"], "]"}]}], "+", 
  RowBox[{"0.024999999999999994`", " ", 
   RowBox[{"Im", "[", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      FractionBox["29.464000000000002`", "x"], "]"}], "2"], 
    "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.919238531620798*^9, {3.919238651069392*^9, 3.9192386671221137`*^9}, 
   3.919238716157689*^9, 3.9192387804657984`*^9, 3.91923888350921*^9, 
   3.91923908004261*^9, {3.9192396249098606`*^9, 3.919239638013102*^9}, {
   3.919239680286228*^9, 3.9192397014871674`*^9}, {3.9192397936856337`*^9, 
   3.919239802601224*^9}, 3.9192927381048875`*^9, 3.9192985493809586`*^9, 
   3.9193051696755767`*^9, 3.9193053138382406`*^9, 3.919305437498528*^9, 
   3.9193055023625374`*^9, 3.9193916349432325`*^9, {3.9223474009774857`*^9, 
   3.9223474252645893`*^9}, 3.9223474985730023`*^9, {3.922347579997273*^9, 
   3.922347595749779*^9}, {3.9223476313769407`*^9, 3.922347649203201*^9}, {
   3.922347924183669*^9, 3.9223479424784303`*^9}, 3.92234978507821*^9, 
   3.9223498601163206`*^9, {3.922349906169799*^9, 3.9223499474766026`*^9}, {
   3.922349980632047*^9, 3.9223499920609365`*^9}, {3.922350578006277*^9, 
   3.922350589501446*^9}, 3.922351625714617*^9, {3.9223518069214983`*^9, 
   3.9223518198923435`*^9}},
 CellLabel->
  "Out[8919]=",ExpressionUUID->"cd52abfa-2269-4c4d-9e35-f1c405a88ac1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.20078575876884183`", " ", 
    RowBox[{"Im", "[", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox["0.96393`", "x"], "]"}], "2"], "]"}]}], ",", 
   RowBox[{"0.01740535421758714`", " ", 
    RowBox[{"Im", "[", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox["29.464000000000002`", "x"], "]"}], "2"], "]"}]}], ",", 
   RowBox[{"0.007594645782412853`", " ", 
    RowBox[{"Im", "[", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox["29.464000000000002`", "x"], "]"}], "2"], "]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.919238531620798*^9, {3.919238651069392*^9, 3.9192386671221137`*^9}, 
   3.919238716157689*^9, 3.9192387804657984`*^9, 3.91923888350921*^9, 
   3.91923908004261*^9, {3.9192396249098606`*^9, 3.919239638013102*^9}, {
   3.919239680286228*^9, 3.9192397014871674`*^9}, {3.9192397936856337`*^9, 
   3.919239802601224*^9}, 3.9192927381048875`*^9, 3.9192985493809586`*^9, 
   3.9193051696755767`*^9, 3.9193053138382406`*^9, 3.919305437498528*^9, 
   3.9193055023625374`*^9, 3.9193916349432325`*^9, {3.9223474009774857`*^9, 
   3.9223474252645893`*^9}, 3.9223474985730023`*^9, {3.922347579997273*^9, 
   3.922347595749779*^9}, {3.9223476313769407`*^9, 3.922347649203201*^9}, {
   3.922347924183669*^9, 3.9223479424784303`*^9}, 3.92234978507821*^9, 
   3.9223498601163206`*^9, {3.922349906169799*^9, 3.9223499474766026`*^9}, {
   3.922349980632047*^9, 3.9223499920609365`*^9}, {3.922350578006277*^9, 
   3.922350589501446*^9}, 3.922351625714617*^9, {3.9223518069214983`*^9, 
   3.9223518198983316`*^9}},
 CellLabel->
  "Out[8920]=",ExpressionUUID->"7c4e688b-c73d-429a-a184-503c1d7c3ac2"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.20078575876884183`", " ", 
      RowBox[{"Im", "[", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["0.96393`", "LE"], "]"}], "2"], "]"}]}], "+", 
     RowBox[{"0.024999999999999994`", " ", 
      RowBox[{"Im", "[", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["29.464000000000002`", "LE"], "]"}], "2"], "]"}]}]}], 
    ")"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.20078575876884183`", " ", 
      RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["0.96393`", "LE"], "]"}], "2"], "]"}]}], "+", 
     RowBox[{"0.024999999999999994`", " ", 
      RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["29.464000000000002`", "LE"], "]"}], "2"], "]"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.919238531620798*^9, {3.919238651069392*^9, 3.9192386671221137`*^9}, 
   3.919238716157689*^9, 3.9192387804657984`*^9, 3.91923888350921*^9, 
   3.91923908004261*^9, {3.9192396249098606`*^9, 3.919239638013102*^9}, {
   3.919239680286228*^9, 3.9192397014871674`*^9}, {3.9192397936856337`*^9, 
   3.919239802601224*^9}, 3.9192927381048875`*^9, 3.9192985493809586`*^9, 
   3.9193051696755767`*^9, 3.9193053138382406`*^9, 3.919305437498528*^9, 
   3.9193055023625374`*^9, 3.9193916349432325`*^9, {3.9223474009774857`*^9, 
   3.9223474252645893`*^9}, 3.9223474985730023`*^9, {3.922347579997273*^9, 
   3.922347595749779*^9}, {3.9223476313769407`*^9, 3.922347649203201*^9}, {
   3.922347924183669*^9, 3.9223479424784303`*^9}, 3.92234978507821*^9, 
   3.9223498601163206`*^9, {3.922349906169799*^9, 3.9223499474766026`*^9}, {
   3.922349980632047*^9, 3.9223499920609365`*^9}, {3.922350578006277*^9, 
   3.922350589501446*^9}, 3.922351625714617*^9, {3.9223518069214983`*^9, 
   3.9223518199056406`*^9}},
 CellLabel->
  "Out[8922]=",ExpressionUUID->"3bd81c20-f2a8-4f12-8764-230a92de8efb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0.5, 0]], 
         LineBox[CompressedData["
1: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
fR4T
          "]]}, Annotation[#, "Charting`Private`Tag$287002#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.09702634307484814}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.09702634307484792}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox[
           RowBox[{"P", " ", 
             RowBox[{"(", 
               RowBox[{
                 SubscriptBox["\[Nu]", "e"], "\[RightArrow]", 
                 SubscriptBox["\[Nu]", "e"]}], ")"}]}], HoldForm], HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox[
          TagBox[
           RowBox[{"Energy", " ", "in", " ", "GeV"}], HoldForm], HoldForm], 
         TraditionalForm], None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Survival Probability of electron neutrino in vacuum\"", 
       TraditionalForm], 
     PlotRange -> {{0.01, 10}, {0.09702634307484792, 0.9986246928653957}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"L=10000\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 
                 TemplateBox[<|"color" -> RGBColor[0, 0.5, 0]|>, 
                  "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.919238531620798*^9, {3.919238651069392*^9, 3.9192386671221137`*^9}, 
   3.919238716157689*^9, 3.9192387804657984`*^9, 3.91923888350921*^9, 
   3.91923908004261*^9, {3.9192396249098606`*^9, 3.919239638013102*^9}, {
   3.919239680286228*^9, 3.9192397014871674`*^9}, {3.9192397936856337`*^9, 
   3.919239802601224*^9}, 3.9192927381048875`*^9, 3.9192985493809586`*^9, 
   3.9193051696755767`*^9, 3.9193053138382406`*^9, 3.919305437498528*^9, 
   3.9193055023625374`*^9, 3.9193916349432325`*^9, {3.9223474009774857`*^9, 
   3.9223474252645893`*^9}, 3.9223474985730023`*^9, {3.922347579997273*^9, 
   3.922347595749779*^9}, {3.9223476313769407`*^9, 3.922347649203201*^9}, {
   3.922347924183669*^9, 3.9223479424784303`*^9}, 3.92234978507821*^9, 
   3.9223498601163206`*^9, {3.922349906169799*^9, 3.9223499474766026`*^9}, {
   3.922349980632047*^9, 3.9223499920609365`*^9}, {3.922350578006277*^9, 
   3.922350589501446*^9}, 3.922351625714617*^9, {3.9223518069214983`*^9, 
   3.9223518199949055`*^9}},
 CellLabel->
  "Out[8923]=",ExpressionUUID->"9ab75a5a-8723-4d03-98a3-fd7b2ab17559"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M11", "=", 
   RowBox[{"M22", "=", 
    RowBox[{"M33", "=", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M12", "=", 
   RowBox[{"M21", "=", 
    RowBox[{"0.759", "*", " ", 
     RowBox[{"10", "^", 
      RowBox[{"-", "4"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M13", "=", 
   RowBox[{"M31", "=", 
    RowBox[{"M23", "=", 
     RowBox[{"M32", "=", 
      RowBox[{"23.2", "*", 
       RowBox[{"10", "^", 
        RowBox[{"\[Minus]", "4"}]}]}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"M11", ",", "M12", ",", "M13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"M21", ",", "M22", ",", "M23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"M31", ",", "M32", ",", "M33"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "//", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"L", "=", "1000"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta12", "=", 
    RowBox[{"0.5", "*", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"Sqrt", "[", "0.846", "]"}], "]"}]}]}], ";"}], 
  "                                                ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Arbitrary", " ", "1", " ", "sec"}], "=", " ", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}], " ", "radian"}]}], " ", "*)"}], 
  "          "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta13", "=", 
    RowBox[{"0.5", "*", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"Sqrt", "[", "0.10", "]"}], "]"}]}]}], ";"}], 
  "    "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta23", "=", 
    RowBox[{"0.5", "*", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"Sqrt", "[", "0.97", "]"}], "]"}]}]}], ";"}], "  ", 
  "\[IndentingNewLine]", 
  "                                                                           \
                                                                              \
  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Arbitrary", " ", "1", " ", "sec"}], "=", " ", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}], " ", "radian"}]}], " ", "*)"}], 
  "   "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phase1", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", "*", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phase2", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", "*", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phase3", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", "*", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Phase", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "phase1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "phase2"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Phase", "//", "MatrixForm"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U23", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Cos", "[", "theta23", "]"}], ",", 
       RowBox[{"Sin", "[", "theta23", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "theta23", "]"}]}], ",", 
       RowBox[{"Cos", "[", "theta23", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U23", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U13", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "theta13", "]"}], ",", "0", ",", 
       RowBox[{"Sin", "[", "theta13", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "theta13", "]"}]}], ",", "0", ",", 
       RowBox[{"Cos", "[", "theta13", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U13", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U12", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "theta12", "]"}], ",", 
       RowBox[{"Sin", "[", "theta12", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "theta12", "]"}]}], ",", 
       RowBox[{"Cos", "[", "theta12", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U12", "//", "MatrixForm"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"U23", ".", "U13", ".", "U12", ".", "Phase"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "//", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "=", 
    RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]}], ";"}], 
  "                                                                ", 
  RowBox[{"(*", 
   RowBox[{"define", " ", "a", " ", "variable", " ", "x"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"list1", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "                                                                           \
    ", 
  RowBox[{"(*", 
   RowBox[{"define", " ", "an", " ", "empty", " ", "list"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "Nmax"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", 
      RowBox[{"i", "+", "1"}]}], ",", 
     RowBox[{"j", "<=", "Nmax"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"prod", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"alpha", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"beta", ",", "i"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"alpha", ",", "j"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"beta", ",", "j"}], "]"}], "]"}]}], ")"}], "*", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"1.27", "*", 
           RowBox[{"M", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
           RowBox[{"L", "/", "x"}]}], "]"}], "^", "2"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"realpart", "=", " ", 
       RowBox[{"Re", "[", "prod", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"list1", ",", "realpart"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sumReal", "[", "x_", "]"}], "=", 
    RowBox[{"Total", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "                                                                           \
                         "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"list2", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "                                                                           \
    ", 
  RowBox[{"(*", 
   RowBox[{
   "define", " ", "an", " ", "empty", " ", "list", " ", "to", " ", "collect", 
    " ", "imaginary", " ", "part"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "Nmax"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", 
      RowBox[{"i", "+", "1"}]}], ",", 
     RowBox[{"j", "<=", "Nmax"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"prod", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"alpha", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"beta", ",", "i"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"alpha", ",", "j"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"beta", ",", "j"}], "]"}], "]"}]}], ")"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"1.27", "*", 
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
          RowBox[{"L", "/", "x"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"impart", "=", " ", 
       RowBox[{"Im", "[", "prod", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"list2", ",", "impart"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sumIm", "[", "x_", "]"}], "=", 
    RowBox[{"Total", "[", "list2", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Peu", "[", "LE_", "]"}], ":=", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"alpha", "==", "beta"}], ",", "1", ",", "0"}], "]"}], "-", 
    RowBox[{"4", "*", 
     RowBox[{"sumReal", "[", "LE", "]"}]}], "+", 
    RowBox[{"2", "*", 
     RowBox[{"sumIm", "[", "LE", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Peu", "[", "LE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"P2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Peu", "[", "LE", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"LE", ",", "0.01", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", "Full"}], ",", " ", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Survival Probability of \!\(\*SubscriptBox[\(\[Nu]\), \(e\)]\) to \
\!\(\*SubscriptBox[\(\[Nu]\), \(e\)]\) in vacuum\>\""}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.7", ",", "0.7"}], "]"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", "\"\<L=1000\>\"", "}"}]}], ",", 
    RowBox[{"PlotTheme", "->", " ", "\"\<Scientific\>\""}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"P", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Nu]", "e"], "\[RightArrow]", 
             SubscriptBox["\[Nu]", "e"]}], ")"}]}], "]"}], ",", "None"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"Length", " ", "in", " ", 
           SuperscriptBox["GeV", "2"]}], "]"}], ",", "None"}], "}"}]}], 
      "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9192443516107845`*^9, 3.919244508349247*^9}, {
   3.9192478081757193`*^9, 3.919247811030444*^9}, 3.919249388552521*^9, {
   3.9192494257941513`*^9, 3.9192494279404554`*^9}, {3.919391587237337*^9, 
   3.919391588115757*^9}, {3.9193916927293615`*^9, 3.9193917052518435`*^9}, {
   3.9193917377491665`*^9, 3.9193917401182795`*^9}, {3.922347385248875*^9, 
   3.9223473865696754`*^9}, {3.922347436527196*^9, 3.9223474378599377`*^9}, {
   3.922347488812873*^9, 3.9223474890108953`*^9}, {3.9223476711234865`*^9, 
   3.9223476957037144`*^9}, {3.922347737351695*^9, 3.9223477615744305`*^9}, {
   3.922347907370557*^9, 3.9223479140376377`*^9}, {3.9223498836512675`*^9, 
   3.922349883750559*^9}, {3.9223500064641294`*^9, 3.922350063381799*^9}, {
   3.922350099584694*^9, 3.9223501777603264`*^9}, {3.9223502299508047`*^9, 
   3.922350230564457*^9}, {3.9223504385920315`*^9, 3.9223504663903704`*^9}, {
   3.922350564597561*^9, 3.9223505662225637`*^9}, {3.9223506103152003`*^9, 
   3.9223506147753153`*^9}, {3.9223511766016135`*^9, 3.922351183462385*^9}, {
   3.9223515745836797`*^9, 3.9223515859277053`*^9}, {3.922351656247157*^9, 
   3.9223516578251286`*^9}, {3.922351772869581*^9, 3.922351774848797*^9}},
 CellLabel->
  "In[8777]:=",ExpressionUUID->"24c6734e-6577-4823-a9db-10804c771f79"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0.0000759`", "0.00232`"},
     {"0.0000759`", "0", "0.00232`"},
     {"0.00232`", "0.00232`", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9192443565634594`*^9, {3.919244493313904*^9, 3.9192445148453393`*^9}, {
   3.919249412909855*^9, 3.919249430296013*^9}, 3.919391643532271*^9, 
   3.9193917071039934`*^9, 3.919391741121808*^9, 3.9223473888828077`*^9, 
   3.922347438568657*^9, 3.92234748989065*^9, {3.9223477391290445`*^9, 
   3.9223477627845755`*^9}, 3.92234791497795*^9, {3.922350019242257*^9, 
   3.922350053275363*^9}, {3.9223500908253255`*^9, 3.922350114945724*^9}, {
   3.922350146633668*^9, 3.9223501787705727`*^9}, 3.92235023139097*^9, 
   3.922350443724385*^9, {3.922350604225853*^9, 3.922350616410348*^9}, 
   3.922351184533636*^9, 3.9223515885996094`*^9, 3.9223516586984653`*^9, 
   3.922351775630274*^9},
 CellLabel->
  "Out[8781]//MatrixForm=",ExpressionUUID->"c9eecc66-9938-4acf-8692-\
09ff6c88cbfc"],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{
  3.9192443565634594`*^9, {3.919244493313904*^9, 3.9192445148453393`*^9}, {
   3.919249412909855*^9, 3.919249430296013*^9}, 3.919391643532271*^9, 
   3.9193917071039934`*^9, 3.919391741121808*^9, 3.9223473888828077`*^9, 
   3.922347438568657*^9, 3.92234748989065*^9, {3.9223477391290445`*^9, 
   3.9223477627845755`*^9}, 3.92234791497795*^9, {3.922350019242257*^9, 
   3.922350053275363*^9}, {3.9223500908253255`*^9, 3.922350114945724*^9}, {
   3.922350146633668*^9, 3.9223501787705727`*^9}, 3.92235023139097*^9, 
   3.922350443724385*^9, {3.922350604225853*^9, 3.922350616410348*^9}, 
   3.922351184533636*^9, 3.9223515885996094`*^9, 3.9223516586984653`*^9, 
   3.9223517756372538`*^9},
 CellLabel->
  "Out[8782]=",ExpressionUUID->"633cb856-cc8b-46c5-b245-c5d2bcd6e871"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.8236203380255388`", "0.5440507217309376`", "0.1601822430069672`"},
     {
      RowBox[{"-", "0.5080741676517451`"}], "0.5822974134018349`", 
      "0.6346576734827359`"},
     {"0.25201225953449913`", 
      RowBox[{"-", "0.6041014273527074`"}], "0.7560101100611935`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9192443565634594`*^9, {3.919244493313904*^9, 3.9192445148453393`*^9}, {
   3.919249412909855*^9, 3.919249430296013*^9}, 3.919391643532271*^9, 
   3.9193917071039934`*^9, 3.919391741121808*^9, 3.9223473888828077`*^9, 
   3.922347438568657*^9, 3.92234748989065*^9, {3.9223477391290445`*^9, 
   3.9223477627845755`*^9}, 3.92234791497795*^9, {3.922350019242257*^9, 
   3.922350053275363*^9}, {3.9223500908253255`*^9, 3.922350114945724*^9}, {
   3.922350146633668*^9, 3.9223501787705727`*^9}, 3.92235023139097*^9, 
   3.922350443724385*^9, {3.922350604225853*^9, 3.922350616410348*^9}, 
   3.922351184533636*^9, 3.9223515885996094`*^9, 3.9223516586984653`*^9, 
   3.9223517756442347`*^9},
 CellLabel->
  "Out[8798]//MatrixForm=",ExpressionUUID->"0fdda15b-2c3d-41a5-8134-\
0ef6d8545bdb"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.20078575876884183`", " ", 
      RowBox[{"Im", "[", 
       RowBox[{"Sin", "[", 
        FractionBox["0.09639299999999999`", "LE"], "]"}], "]"}]}], "+", 
     RowBox[{"0.024999999999999994`", " ", 
      RowBox[{"Im", "[", 
       RowBox[{"Sin", "[", 
        FractionBox["2.9464`", "LE"], "]"}], "]"}]}]}], ")"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.20078575876884183`", " ", 
      RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["0.09639299999999999`", "LE"], "]"}], "2"], "]"}]}], "+", 
     RowBox[{"0.024999999999999994`", " ", 
      RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["2.9464`", "LE"], "]"}], "2"], "]"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.9192443565634594`*^9, {3.919244493313904*^9, 3.9192445148453393`*^9}, {
   3.919249412909855*^9, 3.919249430296013*^9}, 3.919391643532271*^9, 
   3.9193917071039934`*^9, 3.919391741121808*^9, 3.9223473888828077`*^9, 
   3.922347438568657*^9, 3.92234748989065*^9, {3.9223477391290445`*^9, 
   3.9223477627845755`*^9}, 3.92234791497795*^9, {3.922350019242257*^9, 
   3.922350053275363*^9}, {3.9223500908253255`*^9, 3.922350114945724*^9}, {
   3.922350146633668*^9, 3.9223501787705727`*^9}, 3.92235023139097*^9, 
   3.922350443724385*^9, {3.922350604225853*^9, 3.922350616410348*^9}, 
   3.922351184533636*^9, 3.9223515885996094`*^9, 3.9223516586984653`*^9, 
   3.9223517756517673`*^9},
 CellLabel->
  "Out[8810]=",ExpressionUUID->"3025f83c-b60a-4998-addf-80791fabc168"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0.7, 0.7]], 
         LineBox[CompressedData["
1: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
b/fpYIABDc1vMW6OCm24N0vKU3cvjaJ5QdUVVBvo3OpALkXDyu7eem3zNrg6
G7T83kaTfTvdDb/chnm6bXM8ttB4KGVWK/i4DQ9YvEv2qhN9ehPKVyPI+Hd/
LvKr0YiuXevR+LsNh7SURBM30tC7qqmbW9uGc1uFeY4R7lyixxc90AYL/Y+x
9YTvRplnvJzfjijrHlVN8v2qA45ubnLteJ4/reVI5k/puoGz2u1IT6Z0Hcn/
D3v4cI0Ot5N1ljxQI+vrlw5J1TrfjrIZD6EU0PBJ/XZTzrMd413umZO7aKw1
T9smGNoOqUBJS6YejazRksnhpHa81bV+5G1Ew/JpU3JjWTuOXRVtLjxKY1Kl
/3pubzv+2W3ujCDn+aKIZ2v0rA60ZAnJip2loXp2ydhLyQ4MD3aJiVyicea9
2tWzBh0YuSZ16sV9GvzQVTe274DLkaAeQXKfb+tNhrTcOmASlfJmMIhGtcjV
i4LfO3BjjlUZK5bGLs/Ec9GinVCfrX+8q42GtJO23UgD8Ql+kt2bjUm8zT24
mjHSiUtCgdcfkHg98sGiPXdRF/hP8t1sO8+EL+O29SuqC94XL3KiHzHBMcyw
3BbehdMG8THiOUzUbt5zxN2xG2uSjyd3bWLhSrnZMgePbgh+imqR12Fh8QX7
KuOQbgwvfRalYcDCnsiHJvJ/u+HOT8f/tWchTuLPoTy1HqTFPnMKe8WCYWL9
opgDPdC0TYw0DGehz4QufnW6B7qfAluyo1mQfbxQ3+EFGd9wKmE6h4WAmUP7
Fk72YLaQxucXpN5E+Tm4C4v2ottPV1ttktRLqfspYht7IRHix7rLzwYflbJe
1q4X77PXpOiIs7GqtNJWwb0XqX37JaJl2ESPsd+sD+7F+vGm1aVKbFxyk1+y
pZx8z/BoWK/Nhq8Q9LSZvfisUfv4zC42Poceu6cztw/Fsd3DR/TZaEv3HTmw
ow+976aLjY+zwWP0SdnoWB9WBhS2WFqzIdmSZW92hfTBgk5a6iwbprwTdVaf
+/BFbEFj5lU2nAOWLrXLITps86WmDzfY8JFR1nds7oOjk4Iw5c5Gjo5N2tVl
NLypY0XBj9hoLbs15qpK4z/xylIrfza4p15tdNOn4bVWjMt4xobG3eL33iTP
u8zmqS8MYcNYuLveL4RGjsk63t+hbJx/zyf6PInGirzY28rhbHirrTQIqqDR
+73j7YmPbHzM3OL5lkVjdWOZhd5nNrKNjdPDSZ2yHo1LGP/KRnOr08QneSb+
0f99OxPNBueSp1o0mDimo7H/dSwb4rPeO8aZMxGxKepZwA821J/+Ck++ykTl
a0aIfjwbhnI1jWn+TLTu9rlanMCG04+BZdlfmND/UKssmsSGl66gYUEu0VUJ
9Qz5ZDYiKtZ4lbQwUdy2M3iacKaNTmYFh4l5ucO3Q1PYYAwdn6oVY+HY8+S3
i36yMXnPRZ2hxoKtfLfYfsLLRALOtR0kfUJbjNeIsFr4l4hu0keD1SuuKBA2
UM9tYpI+av/6iE8xmc8xu1l86A0LMaX6VrsIPzSdMhpPJn3O3mvuY/L/8HbR
R9OVLLxcX/M6kqw3/crGbL5+Fkxif6q8SmSjgf/AtMACNvap7ao9QfY3/sxW
Y+EaNiTSKj+OxbEhstrtgrAOubdrk1FnyflsjA+KFDvBhkwNxflBzu/g7vgW
yWskzrLmBdeQ83Wo+ish+4SNJZfPvKr6xsYD214TBfI81Mkdj/rCRtp9qVzV
NjYKntmPj0WwUS+qNaPBZeNb86bAs+R+OcZKkm8E+6GWNvYu5R25n7Zdh8MU
+jGVtPMv9zW5j1mued8s+mH5NVpeyY8Njx3Wz/Y79CP05q+fTBJvSf/pnepw
6Ydu2W2r1w/ZkO6XmJL0J1xxPzKRxCe74aeyT2Y/XE8LXBG4TPIlYfq5g8IA
Hg0Gazw3Jvc10GE9R30AbMMS2f0GbIyuL1F5Tw1AoCB+28B+NizD3hTUHRuA
oGPySmlyLsr+mN7nM4B9/DUaAipsFJ91P60wMIB/c/J57eeR/PpwVjVregAt
ItyjgSS/1ZuNuJbzB0HvOX0yb4bcq5nsqxdyg9jaKzpHfJQFJ92sP7PNBtFS
FyryopUFwZWzN7WnDOJdJYvEAwt6pQ9533kMoWp+xpKUc0RvzHZZcODJEDjO
Sw69IHGipmUjOvJ2CBZ8YZHXbFhYEb5dcf/PIRypuX9P7xgL9LVBw4GBIag9
9t2qsZvoK6kToTonh7FiJEb6wCqiP0z3f+5zGkbm4GIT3+UsuHhpxD13HcaT
8y4b6kRYODkklN/zfBhd6xv2P1jAwsa8HHZA0TCyrTO6qAkmys+roFVzBJsd
NeT1qpnIDZPc77N3BPf23bouXM5ESu08E43DI5D7ryCqrZiJsJ3tdt7OIzic
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
Ro6K0U42NSD8P4rNn14=
          "]]}, Annotation[#, "Charting`Private`Tag$284870#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.11394173710486924`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.11394173710486899`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox[
           RowBox[{"P", " ", 
             RowBox[{"(", 
               RowBox[{
                 SubscriptBox["\[Nu]", "e"], "\[RightArrow]", 
                 SubscriptBox["\[Nu]", "e"]}], ")"}]}], HoldForm], HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox[
          TagBox[
           RowBox[{"Length", " ", "in", " ", 
             SuperscriptBox["GeV", "2"]}], HoldForm], HoldForm], 
         TraditionalForm], None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Survival Probability of \\!\\(\\*SubscriptBox[\\(\[Nu]\\), \
\\(e\\)]\\) to \\!\\(\\*SubscriptBox[\\(\[Nu]\\), \\(e\\)]\\) in vacuum\"", 
       TraditionalForm], 
     PlotRange -> {{0.01, 10}, {0.11394173710486899`, 0.9916157742790276}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"L=1000\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.7, 0.7]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.7, 0.7]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 
                 TemplateBox[<|"color" -> RGBColor[0, 0.7, 0.7]|>, 
                  "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9192443565634594`*^9, {3.919244493313904*^9, 3.9192445148453393`*^9}, {
   3.919249412909855*^9, 3.919249430296013*^9}, 3.919391643532271*^9, 
   3.9193917071039934`*^9, 3.919391741121808*^9, 3.9223473888828077`*^9, 
   3.922347438568657*^9, 3.92234748989065*^9, {3.9223477391290445`*^9, 
   3.9223477627845755`*^9}, 3.92234791497795*^9, {3.922350019242257*^9, 
   3.922350053275363*^9}, {3.9223500908253255`*^9, 3.922350114945724*^9}, {
   3.922350146633668*^9, 3.9223501787705727`*^9}, 3.92235023139097*^9, 
   3.922350443724385*^9, {3.922350604225853*^9, 3.922350616410348*^9}, 
   3.922351184533636*^9, 3.9223515885996094`*^9, 3.9223516586984653`*^9, 
   3.9223517757246866`*^9},
 CellLabel->
  "Out[8811]=",ExpressionUUID->"6d87981d-648f-400c-a3fa-6669e5d782d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M11", "=", 
   RowBox[{"M22", "=", 
    RowBox[{"M33", "=", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M12", "=", 
   RowBox[{"M21", "=", 
    RowBox[{"0.759", "*", " ", 
     RowBox[{"10", "^", 
      RowBox[{"-", "4"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M13", "=", 
   RowBox[{"M31", "=", 
    RowBox[{"M23", "=", 
     RowBox[{"M32", "=", 
      RowBox[{"23.2", "*", 
       RowBox[{"10", "^", 
        RowBox[{"\[Minus]", "4"}]}]}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"M11", ",", "M12", ",", "M13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"M21", ",", "M22", ",", "M23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"M31", ",", "M32", ",", "M33"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "//", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"L", "=", "100"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta12", "=", 
    RowBox[{"0.5", "*", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"Sqrt", "[", "0.846", "]"}], "]"}]}]}], ";"}], 
  "                                                ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Arbitrary", " ", "1", " ", "sec"}], "=", " ", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}], " ", "radian"}]}], " ", "*)"}], 
  "          "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta13", "=", 
    RowBox[{"0.5", "*", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"Sqrt", "[", "0.10", "]"}], "]"}]}]}], ";"}], 
  "    "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta23", "=", 
    RowBox[{"0.5", "*", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"Sqrt", "[", "0.97", "]"}], "]"}]}]}], ";"}], "  ", 
  "\[IndentingNewLine]", 
  "                                                                           \
                                                                              \
  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Arbitrary", " ", "1", " ", "sec"}], "=", " ", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}], " ", "radian"}]}], " ", "*)"}], 
  "   "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phase1", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", "*", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phase2", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", "*", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phase3", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", "*", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Phase", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "phase1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "phase2"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Phase", "//", "MatrixForm"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U23", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Cos", "[", "theta23", "]"}], ",", 
       RowBox[{"Sin", "[", "theta23", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "theta23", "]"}]}], ",", 
       RowBox[{"Cos", "[", "theta23", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U23", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U13", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "theta13", "]"}], ",", "0", ",", 
       RowBox[{"Sin", "[", "theta13", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "theta13", "]"}]}], ",", "0", ",", 
       RowBox[{"Cos", "[", "theta13", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U13", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U12", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "theta12", "]"}], ",", 
       RowBox[{"Sin", "[", "theta12", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "theta12", "]"}]}], ",", 
       RowBox[{"Cos", "[", "theta12", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U12", "//", "MatrixForm"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"U23", ".", "U13", ".", "U12", ".", "Phase"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "//", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "=", 
    RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]}], ";"}], 
  "                                                                ", 
  RowBox[{"(*", 
   RowBox[{"define", " ", "a", " ", "variable", " ", "x"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"list1", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "                                                                           \
    ", 
  RowBox[{"(*", 
   RowBox[{"define", " ", "an", " ", "empty", " ", "list"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "Nmax"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", 
      RowBox[{"i", "+", "1"}]}], ",", 
     RowBox[{"j", "<=", "Nmax"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"prod", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"alpha", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"beta", ",", "i"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"alpha", ",", "j"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"beta", ",", "j"}], "]"}], "]"}]}], ")"}], "*", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"1.27", "*", 
           RowBox[{"M", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
           RowBox[{"L", "/", "x"}]}], "]"}], "^", "2"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"realpart", "=", " ", 
       RowBox[{"Re", "[", "prod", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"list1", ",", "realpart"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sumReal", "[", "x_", "]"}], "=", 
    RowBox[{"Total", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "                                                                           \
                         "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"list2", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "                                                                           \
    ", 
  RowBox[{"(*", 
   RowBox[{
   "define", " ", "an", " ", "empty", " ", "list", " ", "to", " ", "collect", 
    " ", "imaginary", " ", "part"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "Nmax"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", 
      RowBox[{"i", "+", "1"}]}], ",", 
     RowBox[{"j", "<=", "Nmax"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"prod", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"alpha", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"beta", ",", "i"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"alpha", ",", "j"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"beta", ",", "j"}], "]"}], "]"}]}], ")"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"1.27", "*", 
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
          RowBox[{"L", "/", "x"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"impart", "=", " ", 
       RowBox[{"Im", "[", "prod", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"list2", ",", "impart"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sumIm", "[", "x_", "]"}], "=", 
    RowBox[{"Total", "[", "list2", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Peu", "[", "LE_", "]"}], ":=", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"alpha", "==", "beta"}], ",", "1", ",", "0"}], "]"}], "-", 
    RowBox[{"4", "*", 
     RowBox[{"sumReal", "[", "LE", "]"}]}], "+", 
    RowBox[{"2", "*", 
     RowBox[{"sumIm", "[", "LE", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Peu", "[", "LE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"P3", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Peu", "[", "LE", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"LE", ",", "0.01", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", "Full"}], ",", " ", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Survival Probability of \!\(\*SubscriptBox[\(\[Nu]\), \(e\)]\) to \
\!\(\*SubscriptBox[\(\[Nu]\), \(e\)]\) in vacuum\>\""}], ",", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", "\"\<L=100\>\"", "}"}]}], ",", 
    RowBox[{"PlotTheme", "->", " ", "\"\<Scientific\>\""}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"P", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Nu]", "e"], "\[RightArrow]", 
             SubscriptBox["\[Nu]", "e"]}], ")"}]}], "]"}], ",", "None"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"Energy", " ", "in", " ", "GeV"}], "]"}], ",", "None"}], 
        "}"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9192478331779947`*^9, 3.9192479161553063`*^9}, 
   3.919249407091161*^9, {3.919249457053817*^9, 3.9192494585537148`*^9}, {
   3.9193915933972416`*^9, 3.9193915959092536`*^9}, {3.9193917150951962`*^9, 
   3.919391723025642*^9}, {3.9223473398938475`*^9, 3.922347367054474*^9}, {
   3.922347449753578*^9, 3.9223474771024384`*^9}, {3.9223477942417784`*^9, 
   3.9223478567856264`*^9}, {3.922350134117322*^9, 3.922350134271637*^9}, {
   3.9223501976660547`*^9, 3.9223503289472227`*^9}, {3.9223503900279875`*^9, 
   3.922350417467493*^9}, 3.922350478791231*^9, {3.9223505437195234`*^9, 
   3.9223505601812706`*^9}, {3.922350631720542*^9, 3.9223506452344303`*^9}, {
   3.922351681292204*^9, 3.9223516827602234`*^9}},
 CellLabel->
  "In[8634]:=",ExpressionUUID->"e63c3f88-7ff7-4631-a8c0-607a063f5e18"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0.0000759`", "0.00232`"},
     {"0.0000759`", "0", "0.00232`"},
     {"0.00232`", "0.00232`", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9192478380795507`*^9, 3.919247864193964*^9}, 
   3.9192479187809353`*^9, 3.9192494606199636`*^9, 3.9193916495204105`*^9, 
   3.91939172421947*^9, {3.922347343622355*^9, 3.9223473681489944`*^9}, {
   3.9223474504006786`*^9, 3.922347478129282*^9}, {3.9223478069163685`*^9, 
   3.9223478318445053`*^9}, 3.922347862607541*^9, 3.922350249879959*^9, {
   3.9223502912313375`*^9, 3.922350329873685*^9}, {3.922350400536298*^9, 
   3.9223504180670886`*^9}, {3.922350625162754*^9, 3.9223506463068867`*^9}, 
   3.922351683457323*^9},
 CellLabel->
  "Out[8638]//MatrixForm=",ExpressionUUID->"50a1b783-616f-4db4-875d-\
aeb12f23b8b8"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{{3.9192478380795507`*^9, 3.919247864193964*^9}, 
   3.9192479187809353`*^9, 3.9192494606199636`*^9, 3.9193916495204105`*^9, 
   3.91939172421947*^9, {3.922347343622355*^9, 3.9223473681489944`*^9}, {
   3.9223474504006786`*^9, 3.922347478129282*^9}, {3.9223478069163685`*^9, 
   3.9223478318445053`*^9}, 3.922347862607541*^9, 3.922350249879959*^9, {
   3.9223502912313375`*^9, 3.922350329873685*^9}, {3.922350400536298*^9, 
   3.9223504180670886`*^9}, {3.922350625162754*^9, 3.9223506463068867`*^9}, 
   3.9223516834648943`*^9},
 CellLabel->
  "Out[8639]=",ExpressionUUID->"2c43e7c7-7ccd-45c1-80ae-b7c542e78b6b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.8236203380255388`", "0.5440507217309376`", "0.1601822430069672`"},
     {
      RowBox[{"-", "0.5080741676517451`"}], "0.5822974134018349`", 
      "0.6346576734827359`"},
     {"0.25201225953449913`", 
      RowBox[{"-", "0.6041014273527074`"}], "0.7560101100611935`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9192478380795507`*^9, 3.919247864193964*^9}, 
   3.9192479187809353`*^9, 3.9192494606199636`*^9, 3.9193916495204105`*^9, 
   3.91939172421947*^9, {3.922347343622355*^9, 3.9223473681489944`*^9}, {
   3.9223474504006786`*^9, 3.922347478129282*^9}, {3.9223478069163685`*^9, 
   3.9223478318445053`*^9}, 3.922347862607541*^9, 3.922350249879959*^9, {
   3.9223502912313375`*^9, 3.922350329873685*^9}, {3.922350400536298*^9, 
   3.9223504180670886`*^9}, {3.922350625162754*^9, 3.9223506463068867`*^9}, 
   3.922351683471923*^9},
 CellLabel->
  "Out[8655]//MatrixForm=",ExpressionUUID->"042c4b83-124b-486a-86ca-\
c63be2c6a859"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.20078575876884183`", " ", 
      RowBox[{"Im", "[", 
       RowBox[{"Sin", "[", 
        FractionBox["0.0096393`", "LE"], "]"}], "]"}]}], "+", 
     RowBox[{"0.024999999999999994`", " ", 
      RowBox[{"Im", "[", 
       RowBox[{"Sin", "[", 
        FractionBox["0.29464`", "LE"], "]"}], "]"}]}]}], ")"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.20078575876884183`", " ", 
      RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["0.0096393`", "LE"], "]"}], "2"], "]"}]}], "+", 
     RowBox[{"0.024999999999999994`", " ", 
      RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["0.29464`", "LE"], "]"}], "2"], "]"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.9192478380795507`*^9, 3.919247864193964*^9}, 
   3.9192479187809353`*^9, 3.9192494606199636`*^9, 3.9193916495204105`*^9, 
   3.91939172421947*^9, {3.922347343622355*^9, 3.9223473681489944`*^9}, {
   3.9223474504006786`*^9, 3.922347478129282*^9}, {3.9223478069163685`*^9, 
   3.9223478318445053`*^9}, 3.922347862607541*^9, 3.922350249879959*^9, {
   3.9223502912313375`*^9, 3.922350329873685*^9}, {3.922350400536298*^9, 
   3.9223504180670886`*^9}, {3.922350625162754*^9, 3.9223506463068867`*^9}, 
   3.922351683479271*^9},
 CellLabel->
  "Out[8667]=",ExpressionUUID->"266405ad-ad9c-468a-8ea7-ab099ced4b75"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
JmwTXbb9f0r+djw=
          "]]}, Annotation[#, "Charting`Private`Tag$281371#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.3719618003985706}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.37196180039856974`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox[
           RowBox[{"P", " ", 
             RowBox[{"(", 
               RowBox[{
                 SubscriptBox["\[Nu]", "e"], "\[RightArrow]", 
                 SubscriptBox["\[Nu]", "e"]}], ")"}]}], HoldForm], HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox[
          TagBox[
           RowBox[{"Energy", " ", "in", " ", "GeV"}], HoldForm], HoldForm], 
         TraditionalForm], None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Survival Probability of \\!\\(\\*SubscriptBox[\\(\[Nu]\\), \
\\(e\\)]\\) to \\!\\(\\*SubscriptBox[\\(\[Nu]\\), \\(e\\)]\\) in vacuum\"", 
       TraditionalForm], 
     PlotRange -> {{0.01, 10}, {0.37196180039856974`, 0.9999124661364337}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"L=100\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 
                 TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                  "RGBColorSwatchTemplate"], ",", 
                 RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9192478380795507`*^9, 3.919247864193964*^9}, 
   3.9192479187809353`*^9, 3.9192494606199636`*^9, 3.9193916495204105`*^9, 
   3.91939172421947*^9, {3.922347343622355*^9, 3.9223473681489944`*^9}, {
   3.9223474504006786`*^9, 3.922347478129282*^9}, {3.9223478069163685`*^9, 
   3.9223478318445053`*^9}, 3.922347862607541*^9, 3.922350249879959*^9, {
   3.9223502912313375`*^9, 3.922350329873685*^9}, {3.922350400536298*^9, 
   3.9223504180670886`*^9}, {3.922350625162754*^9, 3.9223506463068867`*^9}, 
   3.922351683551437*^9},
 CellLabel->
  "Out[8668]=",ExpressionUUID->"970577eb-831a-4487-bb61-421cc7980fed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M11", "=", 
     RowBox[{"M22", "=", 
      RowBox[{"M33", "=", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M12", "=", 
     RowBox[{"M21", "=", 
      RowBox[{"0.759", "*", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M13", "=", 
     RowBox[{"M31", "=", 
      RowBox[{"M23", "=", 
       RowBox[{"M32", "=", 
        RowBox[{"23.2", "*", 
         RowBox[{"10", "^", 
          RowBox[{"\[Minus]", "4"}]}]}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"M11", ",", "M12", ",", "M13"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"M21", ",", "M22", ",", "M23"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"M31", ",", "M32", ",", "M33"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"M", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"L", "=", "20000"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta12", "=", 
     RowBox[{"0.5", "*", 
      RowBox[{"ArcSin", "[", 
       RowBox[{"Sqrt", "[", "0.846", "]"}], "]"}]}]}], ";"}], 
   "                                                ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Arbitrary", " ", "1", " ", "sec"}], "=", " ", 
     RowBox[{
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}], " ", "radian"}]}], " ", "*)"}], "          ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta13", "=", 
     RowBox[{"0.5", "*", 
      RowBox[{"ArcSin", "[", 
       RowBox[{"Sqrt", "[", "0.10", "]"}], "]"}]}]}], ";"}], "    ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta23", "=", 
     RowBox[{"0.5", "*", 
      RowBox[{"ArcSin", "[", 
       RowBox[{"Sqrt", "[", "0.97", "]"}], "]"}]}]}], ";"}], "  ", 
   "\[IndentingNewLine]", 
   "                                                                          \
                                                                              \
   ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Arbitrary", " ", "1", " ", "sec"}], "=", " ", 
     RowBox[{
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}], " ", "radian"}]}], " ", "*)"}], "   ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phase1", "=", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", "*", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phase2", "=", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", "*", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phase3", "=", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", "*", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Phase", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "phase1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "phase2"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Phase", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U23", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"Cos", "[", "theta23", "]"}], ",", 
         RowBox[{"Sin", "[", "theta23", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "theta23", "]"}]}], ",", 
         RowBox[{"Cos", "[", "theta23", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U23", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U13", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "theta13", "]"}], ",", "0", ",", 
         RowBox[{"Sin", "[", "theta13", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "theta13", "]"}]}], ",", "0", ",", 
         RowBox[{"Cos", "[", "theta13", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U13", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U12", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "theta12", "]"}], ",", 
         RowBox[{"Sin", "[", "theta12", "]"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "theta12", "]"}]}], ",", 
         RowBox[{"Cos", "[", "theta12", "]"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U12", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U", "=", 
     RowBox[{"U23", ".", "U13", ".", "U12", ".", "Phase"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"U", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"alpha", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"beta", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]}], ";"}], 
   "                                                                ", 
   RowBox[{"(*", 
    RowBox[{"define", " ", "a", " ", "variable", " ", "x"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list1", "=", 
     RowBox[{"{", "}"}]}], ";"}], 
   "                                                                          \
     ", 
   RowBox[{"(*", 
    RowBox[{"define", " ", "an", " ", "empty", " ", "list"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<", "Nmax"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", 
        RowBox[{"i", "+", "1"}]}], ",", 
       RowBox[{"j", "<=", "Nmax"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"prod", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"U", "[", 
             RowBox[{"[", 
              RowBox[{"alpha", ",", "i"}], "]"}], "]"}], "*", 
            RowBox[{"Conjugate", "[", 
             RowBox[{"U", "[", 
              RowBox[{"[", 
               RowBox[{"beta", ",", "i"}], "]"}], "]"}], "]"}], "*", 
            RowBox[{"Conjugate", "[", 
             RowBox[{"U", "[", 
              RowBox[{"[", 
               RowBox[{"alpha", ",", "j"}], "]"}], "]"}], "]"}], "*", 
            RowBox[{"U", "[", 
             RowBox[{"[", 
              RowBox[{"beta", ",", "j"}], "]"}], "]"}]}], ")"}], "*", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"1.27", "*", 
             RowBox[{"M", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
             RowBox[{"L", "/", "x"}]}], "]"}], "^", "2"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"realpart", "=", " ", 
         RowBox[{"Re", "[", "prod", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", "realpart"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sumReal", "[", "x_", "]"}], "=", 
     RowBox[{"Total", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "                                                                          \
                          ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list2", "=", 
     RowBox[{"{", "}"}]}], ";"}], 
   "                                                                          \
     ", 
   RowBox[{"(*", 
    RowBox[{
    "define", " ", "an", " ", "empty", " ", "list", " ", "to", " ", "collect",
      " ", "imaginary", " ", "part"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<", "Nmax"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", 
        RowBox[{"i", "+", "1"}]}], ",", 
       RowBox[{"j", "<=", "Nmax"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"prod", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"U", "[", 
             RowBox[{"[", 
              RowBox[{"alpha", ",", "i"}], "]"}], "]"}], "*", 
            RowBox[{"Conjugate", "[", 
             RowBox[{"U", "[", 
              RowBox[{"[", 
               RowBox[{"beta", ",", "i"}], "]"}], "]"}], "]"}], "*", 
            RowBox[{"Conjugate", "[", 
             RowBox[{"U", "[", 
              RowBox[{"[", 
               RowBox[{"alpha", ",", "j"}], "]"}], "]"}], "]"}], "*", 
            RowBox[{"U", "[", 
             RowBox[{"[", 
              RowBox[{"beta", ",", "j"}], "]"}], "]"}]}], ")"}], "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"1.27", "*", 
            RowBox[{"M", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
            RowBox[{"L", "/", "x"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"impart", "=", " ", 
         RowBox[{"Im", "[", "prod", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list2", ",", "impart"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sumIm", "[", "x_", "]"}], "=", 
     RowBox[{"Total", "[", "list2", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Peu", "[", "LE_", "]"}], ":=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"alpha", "==", "beta"}], ",", "1", ",", "0"}], "]"}], "-", 
      RowBox[{"4", "*", 
       RowBox[{"sumReal", "[", "LE", "]"}]}], "+", 
      RowBox[{"2", "*", 
       RowBox[{"sumIm", "[", "LE", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Peu", "[", "LE", "]"}], "\[IndentingNewLine]", 
   RowBox[{"P4", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Peu", "[", "LE", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"LE", ",", "0.3", ",", "10"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", "Full"}], ",", " ", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Survival Probability of \!\(\*SubscriptBox[\(\[Nu]\), \(e\)]\) to \
\!\(\*SubscriptBox[\(\[Nu]\), \(e\)]\) in vacuum\>\""}], ",", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", "\"\<L=20000\>\"", "}"}]}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.7", ",", "0", ",", "0"}], "]"}], "]"}]}], ",", 
      RowBox[{"PlotTheme", "->", " ", "\"\<Scientific\>\""}], ",", " ", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"HoldForm", "[", 
            RowBox[{"P", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Nu]", "e"], "\[RightArrow]", 
               SubscriptBox["\[Nu]", "e"]}], ")"}]}], "]"}], ",", "None"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"HoldForm", "[", 
            RowBox[{"Energy", " ", "in", " ", "GeV"}], "]"}], ",", "None"}], 
          "}"}]}], "}"}]}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9223510368636947`*^9, 3.9223510709746857`*^9}, {
  3.922351123660555*^9, 3.9223511520074053`*^9}, {3.9223512349513226`*^9, 
  3.9223512522965603`*^9}, {3.9223512902939863`*^9, 3.922351311165786*^9}, {
  3.9223514959059267`*^9, 3.9223515027010765`*^9}, {3.922351722500619*^9, 
  3.922351753250618*^9}},
 CellLabel->
  "In[8741]:=",ExpressionUUID->"749b8b95-537f-4696-ad99-6897ccd8d9b0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0.0000759`", "0.00232`"},
     {"0.0000759`", "0", "0.00232`"},
     {"0.00232`", "0.00232`", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9223510826860113`*^9, {3.9223511241692476`*^9, 3.9223511527819653`*^9}, {
   3.9223512078981757`*^9, 3.922351252671879*^9}, {3.9223512928139*^9, 
   3.922351311863164*^9}, 3.922351508715048*^9, {3.922351723578808*^9, 
   3.922351754171173*^9}},
 CellLabel->
  "Out[8745]//MatrixForm=",ExpressionUUID->"1170ab05-ed33-4317-aa05-\
a9ab54a159c8"],

Cell[BoxData["20000"], "Output",
 CellChangeTimes->{
  3.9223510826860113`*^9, {3.9223511241692476`*^9, 3.9223511527819653`*^9}, {
   3.9223512078981757`*^9, 3.922351252671879*^9}, {3.9223512928139*^9, 
   3.922351311863164*^9}, 3.922351508715048*^9, {3.922351723578808*^9, 
   3.9223517541771574`*^9}},
 CellLabel->
  "Out[8746]=",ExpressionUUID->"7fa2e12c-d672-4b7e-abef-7a26e2b10d1c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.8236203380255388`", "0.5440507217309376`", "0.1601822430069672`"},
     {
      RowBox[{"-", "0.5080741676517451`"}], "0.5822974134018349`", 
      "0.6346576734827359`"},
     {"0.25201225953449913`", 
      RowBox[{"-", "0.6041014273527074`"}], "0.7560101100611935`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9223510826860113`*^9, {3.9223511241692476`*^9, 3.9223511527819653`*^9}, {
   3.9223512078981757`*^9, 3.922351252671879*^9}, {3.9223512928139*^9, 
   3.922351311863164*^9}, 3.922351508715048*^9, {3.922351723578808*^9, 
   3.922351754186163*^9}},
 CellLabel->
  "Out[8762]//MatrixForm=",ExpressionUUID->"f4cf022a-9a92-49ec-aad4-\
9c897e54e0e6"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.20078575876884183`", " ", 
      RowBox[{"Im", "[", 
       RowBox[{"Sin", "[", 
        FractionBox["1.92786`", "LE"], "]"}], "]"}]}], "+", 
     RowBox[{"0.024999999999999994`", " ", 
      RowBox[{"Im", "[", 
       RowBox[{"Sin", "[", 
        FractionBox["58.928000000000004`", "LE"], "]"}], "]"}]}]}], ")"}]}], 
  "-", 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.20078575876884183`", " ", 
      RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["1.92786`", "LE"], "]"}], "2"], "]"}]}], "+", 
     RowBox[{"0.024999999999999994`", " ", 
      RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["58.928000000000004`", "LE"], "]"}], "2"], "]"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.9223510826860113`*^9, {3.9223511241692476`*^9, 3.9223511527819653`*^9}, {
   3.9223512078981757`*^9, 3.922351252671879*^9}, {3.9223512928139*^9, 
   3.922351311863164*^9}, 3.922351508715048*^9, {3.922351723578808*^9, 
   3.922351754193147*^9}},
 CellLabel->
  "Out[8774]=",ExpressionUUID->"0998a8dc-69d1-420e-87ca-93561baa0df7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          RGBColor[0.7, 0, 0]], 
         LineBox[CompressedData["
1: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
BawoI+fl+0cYpk4OxVmpsiKx71zOBzC8dDp4elODFWnoas/ZYHyE3x9b/W6y
oi0h92avtkloOuufc8SAFXE33GfRx+IpzPCJTjNhRQE3R+NIzVi9pLzfXHjA
ilbUikOksXwi/r5+2G7LisrPKC9CwyT4yLprWTxlRfpKE82MmB7P81z+W3dh
xebjkzdCq7H6Kb7gff+aFXGM4mPGKrH6FTlS8vpgenzcIy2XYfWDJ6SUAFY0
9Vndqgarx9kym0blz6wocH/b2LRgEvgvPfzT8oUVqZ18frAiB6vnP4sI0zhW
RN94cmj6D1a/GiOLt2mY3pdgI/IXVj/1u9d4slkRF80oo1DiJPxr0JNMLmRF
11lCkl3isHq1aO821rIi3aHp66HY+brbc/Ez1zim/6FXhumeWP45LLayU6zo
QcDJR9LYeeUL61G5s8CKaO1G2kNfTMLALbuVqB1WdOigbeX2I6x+7RE3hbgO
oHt9hfsPb2K4aYFNSvUA8jt85u/WEQxXxgRoJx1At21vTVH9IkNh/ENLh9QD
yEuVUrMVu898b6SVQ7IOIKfl6zk/osgwcKFutrv0AEo8Qyn/KIAMhiWrGsa9
B1AD47qXiwO2P6ZU6PXwAbQ0r5f77RG2391vJ454AJkE9jR2mWP7lY6lTCwe
QKcq+sue65FB/N4PnCwOj+K3Cutiz5NhqMFv8Qo9HvXVdYuYyZIhQMl+UJ8J
j44n18grSZJhjlfprwsbHqExTWp5YTKk9rWaFx/Bo/2xIrpnrGQwUs/RbhbA
o09JDItMDGRgzY9SIhzHI/c0UZEyajLYRTzgpBLFI/PQIev3myQ4q79bcVkG
j3iDrTwTJkgg+pbjarg8HrGLX9gaHyGBUNappiklPDKYfKauNUiCQ/jbPR8v
4VEMoUMtoYMEnMo290ZV8Wjpt4lmYAv2PWvjOSqtjkftF3H9SQ0koK5JnenV
xiOR3Cvj9/9h/Xi10l5MF484tfhfUpeTYON4/5q7Hh4V7r1ubC/G+vmNxZet
BnjU3Ol0q72ABLMedJRCRnj0vN/GmyqPBOTfR94+v49H/XqSNfezSTDaL8VU
a45HVKcYXi/+IcEAg3ogrxUWL38qU2YGCbplTbjsHuHRq1t3CuPTSNBm8Tyy
1A7DQQ3DVb+x7+Vg/6McDpjeHwwLeFNIUFUWl2DxDI++ntvxj0smQdl87qlc
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
          "]]}, Annotation[#, "Charting`Private`Tag$283898#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.30000000000000066`, 0.09729113780898258}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3, 0.09729113780898235}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox[
           RowBox[{"P", " ", 
             RowBox[{"(", 
               RowBox[{
                 SubscriptBox["\[Nu]", "e"], "\[RightArrow]", 
                 SubscriptBox["\[Nu]", "e"]}], ")"}]}], HoldForm], HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox[
          TagBox[
           RowBox[{"Energy", " ", "in", " ", "GeV"}], HoldForm], HoldForm], 
         TraditionalForm], None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Survival Probability of \\!\\(\\*SubscriptBox[\\(\[Nu]\\), \
\\(e\\)]\\) to \\!\\(\\*SubscriptBox[\\(\[Nu]\\), \\(e\\)]\\) in vacuum\"", 
       TraditionalForm], 
     PlotRange -> {{0.3, 10}, {0.09729113780898235, 0.9961474433692235}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"L=20000\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 
                 TemplateBox[<|"color" -> RGBColor[0.7, 0, 0]|>, 
                  "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9223510826860113`*^9, {3.9223511241692476`*^9, 3.9223511527819653`*^9}, {
   3.9223512078981757`*^9, 3.922351252671879*^9}, {3.9223512928139*^9, 
   3.922351311863164*^9}, 3.922351508715048*^9, {3.922351723578808*^9, 
   3.922351754289592*^9}},
 CellLabel->
  "Out[8775]=",ExpressionUUID->"66228e93-1e71-4421-855a-ea09fc952fcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"P4", ",", "P1", ",", "P2", ",", "P3", ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Survival Probability of \!\(\*SubscriptBox[\(\[Nu]\), \(e\)]\) in \
vacuum\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"P", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Nu]", "e"], "\[RightArrow]", 
            SubscriptBox["\[Nu]", "e"]}], ")"}]}], "]"}], ",", "None"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"Energy", " ", "in", " ", "GeV"}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9193915990058193`*^9, 3.919391617059885*^9}, {
  3.9223479927242093`*^9, 3.9223480552416773`*^9}, {3.922350347126036*^9, 
  3.92235036894413*^9}, {3.9223506669275584`*^9, 3.922350674219672*^9}, {
  3.922351091829256*^9, 3.922351093305477*^9}, {3.9223513554953403`*^9, 
  3.9223513594568167`*^9}},
 CellLabel->
  "In[8924]:=",ExpressionUUID->"46505088-d736-42f5-8797-e3d74ef09d09"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6], 
           RGBColor[0.7, 0, 0]], 
          LineBox[CompressedData["
1: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
BawoI+fl+0cYpk4OxVmpsiKx71zOBzC8dDp4elODFWnoas/ZYHyE3x9b/W6y
oi0h92avtkloOuufc8SAFXE33GfRx+IpzPCJTjNhRQE3R+NIzVi9pLzfXHjA
ilbUikOksXwi/r5+2G7LisrPKC9CwyT4yLprWTxlRfpKE82MmB7P81z+W3dh
xebjkzdCq7H6Kb7gff+aFXGM4mPGKrH6FTlS8vpgenzcIy2XYfWDJ6SUAFY0
9Vndqgarx9kym0blz6wocH/b2LRgEvgvPfzT8oUVqZ18frAiB6vnP4sI0zhW
RN94cmj6D1a/GiOLt2mY3pdgI/IXVj/1u9d4slkRF80oo1DiJPxr0JNMLmRF
11lCkl3isHq1aO821rIi3aHp66HY+brbc/Ez1zim/6FXhumeWP45LLayU6zo
QcDJR9LYeeUL61G5s8CKaO1G2kNfTMLALbuVqB1WdOigbeX2I6x+7RE3hbgO
oHt9hfsPb2K4aYFNSvUA8jt85u/WEQxXxgRoJx1At21vTVH9IkNh/ENLh9QD
yEuVUrMVu898b6SVQ7IOIKfl6zk/osgwcKFutrv0AEo8Qyn/KIAMhiWrGsa9
B1AD47qXiwO2P6ZU6PXwAbQ0r5f77RG2391vJ454AJkE9jR2mWP7lY6lTCwe
QKcq+sue65FB/N4PnCwOj+K3Cutiz5NhqMFv8Qo9HvXVdYuYyZIhQMl+UJ8J
j44n18grSZJhjlfprwsbHqExTWp5YTKk9rWaFx/Bo/2xIrpnrGQwUs/RbhbA
o09JDItMDGRgzY9SIhzHI/c0UZEyajLYRTzgpBLFI/PQIev3myQ4q79bcVkG
j3iDrTwTJkgg+pbjarg8HrGLX9gaHyGBUNappiklPDKYfKauNUiCQ/jbPR8v
4VEMoUMtoYMEnMo290ZV8Wjpt4lmYAv2PWvjOSqtjkftF3H9SQ0koK5JnenV
xiOR3Cvj9/9h/Xi10l5MF484tfhfUpeTYON4/5q7Hh4V7r1ubC/G+vmNxZet
BnjU3Ol0q72ABLMedJRCRnj0vN/GmyqPBOTfR94+v49H/XqSNfezSTDaL8VU
a45HVKcYXi/+IcEAg3ogrxUWL38qU2YGCbplTbjsHuHRq1t3CuPTSNBm8Tyy
1A7DQQ3DVb+x7+Vg/6McDpjeHwwLeFNIUFUWl2DxDI++ntvxj0smQdl87qlc
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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$283898#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0.5, 0]], 
          LineBox[CompressedData["
1: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
fR4T
           "]]}, 
         Annotation[#, "Charting`Private`Tag$287002#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0.7, 0.7]], 
          LineBox[CompressedData["
1:eJwVl3c8Vf8fx5HSUElEUmaJikiK1OtIU5KVSpEIhUpLfbUoJZLRJkqRtIyy
i+wVske49j73Xnte1+/z++s8no/zOZ/zGe/xeslYXzC25ePh4enk5eH5/7N1
qj6c4+qBDsl3Et3PmUj+pn3heIY31putSRIYrUR+dIlk4z1/pN74aH9omsaP
uTPugh+f4oTBJ9/8o6V4c0qla1vhC3BC9F7n+pTDO+WkviMzEDyOyo+913Ti
6lL/2CChEJSXiT67YcjCRg2rBR3LQzGvXDd0eoSFCOvx1Jtf3qFgUZ94uhQN
ST9/Z5HtYTiY5BFja9SNgJ9r5b6WhCNV3Eg81qINc7rTq3StItBwJ3n0tVUt
booce1g/8BEnhp8Gx5XWYJAa0Lp87xOU5INLcveW4cw5L+Z80S9YX0b7HrPN
ByNQJvR9xFc8e2NiZ+GTA5PcZGOtrVFo5o92/086H/mDRrPLC6JB/1jznzsj
D28Xj9THfYtBTNE92f3rUvFvtU68m0ss3DLf8Gvsz4Go9mNffXyHVYiY9Jj0
Hxga19mLz/0Bzhb7K4fJ/N5nVuu0l/5ApkQ/d9P8MuTcvigRExiH/iiNfa9r
isDzPHXohnU8chVeFR3aW45tX+YV712XAKFfXUrfJyvhknE4YulwAjQCFaZr
mWWIrXl3p+lXImS1pT4kz9SCZjKPfrmfhKJ3OxPf0LVQ4NdSu2aQjAdSVgU9
NtWwlniwQFcsBTujjfnnD9QjeGN5+6LmFEQaeO8N2tuEmj2r0v5F/sSJYtPc
xfoNELZweBlx8Rf45c9rFvbUQ/9ygvMlrVQIBnMH59g2w9OLT2/HrDREVLoV
W6q3IvOtgdz8IsKSv3zkAlswHR/EqXr2G/kXgi/7nGyGpN1Qb6lyOlwP3w1V
/N0MrYuBNRpP06H0i8d73bdWHLmJ7OCxdDz0qHX2vdaOK54dMXwnMtD9VTVc
uKYdT548CjmTngEr+oSiKacN0SGq3iXymXBVvdcvLNiGosgaF3WvTNjofx7i
429D749bNkHMTLgdc2kLEWqHwG85Qx7jLDR8SWT8eNcB+cICbbuELARvWlpk
wOrEzqoLikUS2fC+/Xuf0uUuWDWLLlO7k42vlhsHHyp04VbfT75XbdnI58tw
q7XtRNDoKfb03hyYaj9M+vS1A0m8cxtsvuYg4uCLjCOnOlAtGJVfIJSL+cd9
e8K+dWBIzDRe5WouAhrXmGy+1Qkhucl3z+tycclknFMT0AVl5VDfqe15CN6l
JXIytBv6mntunHqfh7vylSnLHXpwdhdtnzcnH83G5sLLi3rw4NAT0w2O+RCP
T4pjZfYg3HyrztO/+VjBadLVs+1Bhi1jw8SmAjhtif98r64bDGcPiZOvCnBe
ZlbbEr1ucG4oCeRwCoDnQs7N9V1Y7lk6pHSqEN3bd3QvjeyCltWbfL6SQmh5
rLqgmtYFc02nkH9af/B5/LqNr0w3XIW1Ln3/+Ad7dvG/mJvejaA+gb3eIkWI
1DY8YHGnBynZVSus3Yuwo1zCF7q9+BcS1q/JKsLqwcOco4O9mHS5mLPkeDEu
j8Qsi/ivDxKGCOrJK8bppB21IiV90FJceCFDvQTfvB2/hNB9MOer1w18V4JP
Pl1/tOr64FofKX5x0V+EC5kqqYT04XWcC3Pfjb84222oM3t3H3493pUp3f0X
eQeNdAIZvTi/yevATaVSNP86uOHMtV5wpfo3d1uV4uFS/5O7VvTCV/CItOnL
UnCPc6JdK3qwaiJ1fnpxKSY3FPrZRPQgqkN+ZB1/GfhcShYavewh+3rU9FKr
DMIxhdtyyPuStMGCWRfL4PLFt+pfeQ8svxyLu/CxDPuCa7f8EesF62X6m/rG
MpInh4LvOPfitoeC116RcvxaJGIqVdOLRRd9L//QK4fLDc8f/mT9byxGLKTc
y+FqrbuyM74Pynon9j1KLEe8UUz5D1kaaRpZamPMcthZBOQc9KRhIKe00ka+
Agt5Kv1ZTTQYiwME/ppX4KnvvgWFikyc54wNaAVUwGx0zudFNkxwuy0bIvIq
wNbU0a7zZsKvKidXmFuBHusmr1XvmJDOXB97W70S2dtMZX0jmIiJevq616ES
QcMb914MZoJ6PXnf7F0lNlVF2T/0YKLU85RzZk0l9EX3rO6xYsLqSr658qIq
zFMyO8nYxES/lcruoF1V8JLyMPkzQ8Pt4AuVOTeqwFycd0s4j4aQ1vTyS7FV
2Bi02J/Hh0bomtP8jK4qFDVefPHTkMbGpX9Y+1dVg7t6gaKGGI30GdW6eNNq
rM2Vt1/T0gdD+lWWzKNqGC73t+CJ6UNz7cy3xxnVSH854jDk0QfnHLtXE2PV
cBlr29Br1Qee78V3bZVrMM3H99BnVx/836ifKztdA5/Pmnt0N/ZB+tHrI9tf
1yBW4uXs7fJ9iLnGt/NTWQ2E3yaOXpbuA3X67HrRubXIrZqzIY68LzUsXea+
oxYchS619+R7q+1beJlXSF9ifPiYoduHfsU3fUe/1OJ6wuHEGxZ9cFs2uzq7
pRaL9JbsXX2rD0KznNI3itehvdYrmf99H0LZ5Z+DDerw2XzR1iN/+rCxQfP5
3Pt1qGeZXz48TvYbL+DQPFCHX+2n5LTMaQTYhy31//MPbltWFlLkvpOkXX5b
cQm/75jad5SJ5rp9jqqq9cgdPG/Ufp8JgacrxPhO1+OKyfo3cbFMKOuzMstf
1GOcSa+yr2fi8OyM82EF9Uj3jDoTx8fCzbSnElc49eB90KJqpcBC2DW73F0q
DUjsXc/Zup+Fwo2al0StG1ASaxoudoaFgZ4FqzqfNWDOf86NjHssiIcxChLy
GnAnTCHYNZgF6kTsVc/JBmjfVXZpimXBXtRD5uiGRjCW50/My2bBt8SseK1V
I571v+bhlrOQ4Kn438STRty8lM6Ty2ChkeLIF+Y0Yr7gJctLXSzwT5aUBo2T
8f8ep4szWVj3491Nx3UMzN3y+GwFmwVjpytrtS0ZEHh97kU6YdfVeysFAxhY
fD2inZeMf8dY7taYxYCJrWD6TzJf/kt6XdQoA5v37akTaWah3/B3zW3FJty4
tPvD5moWxOY/uXfoRBOS4/k79xaysCPrtIq0XxP8Ir9ou/xiwe7mlvr+jCYc
PSyc0/eVhceb53tmDDdhbs79lIrXLLAqjlxQ3dCM/HWfn0RcZeHuRp2cwD3N
uNPQX9phxYLoY6UVfFbNsPW3S8YBFrT3TOeWP2lGutQVTvNKFkrfd0pu+0r6
cP7z0MtzWLCZ+XspLKcZlzcs1UlkMeGd9H7VlfFmiGeuPV+dxkSd0j4XUcsW
/J47desHyU8nT9WiW9da4GX0qkdcjwmedgnZTv8WXD43oDtfnYm1IczihKwW
DGeWRdbPY+LXRLWcVGMLQlwf5zeM0Dhklv6f52gL7m6RXP61lYbL4qerjyq2
YuHkd9OONBrznW7eSN/ZCp6yhxdsomiE5NuWrT3RClsdk221b0g+rz6kEHC1
FR2fR3fr+dPIdt96a8K3FZb5I2Vpd2kcZchUnIpsRdw80W5NFxp9WgsUCzNa
scdp8dk0Bxq3Xw7fVqtvxUgqpAysaAgPN1YGDbfiZqx8aY8ZjQjDPKVZi9qg
b/fpYIABDc1vMW6OCm24N0vKU3cvjaJ5QdUVVBvo3OpALkXDyu7eem3zNrg6
G7T83kaTfTvdDb/chnm6bXM8ttB4KGVWK/i4DQ9YvEv2qhN9ehPKVyPI+Hd/
LvKr0YiuXevR+LsNh7SURBM30tC7qqmbW9uGc1uFeY4R7lyixxc90AYL/Y+x
9YTvRplnvJzfjijrHlVN8v2qA45ubnLteJ4/reVI5k/puoGz2u1IT6Z0Hcn/
D3v4cI0Ot5N1ljxQI+vrlw5J1TrfjrIZD6EU0PBJ/XZTzrMd413umZO7aKw1
T9smGNoOqUBJS6YejazRksnhpHa81bV+5G1Ew/JpU3JjWTuOXRVtLjxKY1Kl
/3pubzv+2W3ujCDn+aKIZ2v0rA60ZAnJip2loXp2ydhLyQ4MD3aJiVyicea9
2tWzBh0YuSZ16sV9GvzQVTe274DLkaAeQXKfb+tNhrTcOmASlfJmMIhGtcjV
i4LfO3BjjlUZK5bGLs/Ec9GinVCfrX+8q42GtJO23UgD8Ql+kt2bjUm8zT24
mjHSiUtCgdcfkHg98sGiPXdRF/hP8t1sO8+EL+O29SuqC94XL3KiHzHBMcyw
3BbehdMG8THiOUzUbt5zxN2xG2uSjyd3bWLhSrnZMgePbgh+imqR12Fh8QX7
KuOQbgwvfRalYcDCnsiHJvJ/u+HOT8f/tWchTuLPoTy1HqTFPnMKe8WCYWL9
opgDPdC0TYw0DGehz4QufnW6B7qfAluyo1mQfbxQ3+EFGd9wKmE6h4WAmUP7
Fk72YLaQxucXpN5E+Tm4C4v2ottPV1ttktRLqfspYht7IRHix7rLzwYflbJe
1q4X77PXpOiIs7GqtNJWwb0XqX37JaJl2ESPsd+sD+7F+vGm1aVKbFxyk1+y
pZx8z/BoWK/Nhq8Q9LSZvfisUfv4zC42Poceu6cztw/Fsd3DR/TZaEv3HTmw
ow+976aLjY+zwWP0SdnoWB9WBhS2WFqzIdmSZW92hfTBgk5a6iwbprwTdVaf
+/BFbEFj5lU2nAOWLrXLITps86WmDzfY8JFR1nds7oOjk4Iw5c5Gjo5N2tVl
NLypY0XBj9hoLbs15qpK4z/xylIrfza4p15tdNOn4bVWjMt4xobG3eL33iTP
u8zmqS8MYcNYuLveL4RGjsk63t+hbJx/zyf6PInGirzY28rhbHirrTQIqqDR
+73j7YmPbHzM3OL5lkVjdWOZhd5nNrKNjdPDSZ2yHo1LGP/KRnOr08QneSb+
0f99OxPNBueSp1o0mDimo7H/dSwb4rPeO8aZMxGxKepZwA821J/+Ck++ykTl
a0aIfjwbhnI1jWn+TLTu9rlanMCG04+BZdlfmND/UKssmsSGl66gYUEu0VUJ
9Qz5ZDYiKtZ4lbQwUdy2M3iacKaNTmYFh4l5ucO3Q1PYYAwdn6oVY+HY8+S3
i36yMXnPRZ2hxoKtfLfYfsLLRALOtR0kfUJbjNeIsFr4l4hu0keD1SuuKBA2
UM9tYpI+av/6iE8xmc8xu1l86A0LMaX6VrsIPzSdMhpPJn3O3mvuY/L/8HbR
R9OVLLxcX/M6kqw3/crGbL5+Fkxif6q8SmSjgf/AtMACNvap7ao9QfY3/sxW
Y+EaNiTSKj+OxbEhstrtgrAOubdrk1FnyflsjA+KFDvBhkwNxflBzu/g7vgW
yWskzrLmBdeQ83Wo+ish+4SNJZfPvKr6xsYD214TBfI81Mkdj/rCRtp9qVzV
NjYKntmPj0WwUS+qNaPBZeNb86bAs+R+OcZKkm8E+6GWNvYu5R25n7Zdh8MU
+jGVtPMv9zW5j1mued8s+mH5NVpeyY8Njx3Wz/Y79CP05q+fTBJvSf/pnepw
6Ydu2W2r1w/ZkO6XmJL0J1xxPzKRxCe74aeyT2Y/XE8LXBG4TPIlYfq5g8IA
Hg0Gazw3Jvc10GE9R30AbMMS2f0GbIyuL1F5Tw1AoCB+28B+NizD3hTUHRuA
oGPySmlyLsr+mN7nM4B9/DUaAipsFJ91P60wMIB/c/J57eeR/PpwVjVregAt
ItyjgSS/1ZuNuJbzB0HvOX0yb4bcq5nsqxdyg9jaKzpHfJQFJ92sP7PNBtFS
FyryopUFwZWzN7WnDOJdJYvEAwt6pQ9533kMoWp+xpKUc0RvzHZZcODJEDjO
Sw69IHGipmUjOvJ2CBZ8YZHXbFhYEb5dcf/PIRypuX9P7xgL9LVBw4GBIag9
9t2qsZvoK6kToTonh7FiJEb6wCqiP0z3f+5zGkbm4GIT3+UsuHhpxD13HcaT
8y4b6kRYODkklN/zfBhd6xv2P1jAwsa8HHZA0TCyrTO6qAkmys+roFVzBJsd
NeT1qpnIDZPc77N3BPf23bouXM5ESu08E43DI5D7ryCqrZiJsJ3tdt7OIzic
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
Ro6K0U42NSD8P4rNn14=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$284870#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
JmwTXbb9f0r+djw=
           "]]}, Annotation[#, "Charting`Private`Tag$281371#1"]& ]}}, {}}}, {
    PlotLabel -> 
     FormBox["\"Survival Probability of \\!\\(\\*SubscriptBox[\\(\[Nu]\\), \
\\(e\\)]\\) in vacuum\"", TraditionalForm], FrameLabel -> {{
        FormBox[
         TagBox[
          RowBox[{"P", " ", 
            RowBox[{"(", 
              RowBox[{
                SubscriptBox["\[Nu]", "e"], "\[RightArrow]", 
                SubscriptBox["\[Nu]", "e"]}], ")"}]}], HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox[
          RowBox[{"Energy", " ", "in", " ", "GeV"}], HoldForm], 
         TraditionalForm], None}}, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.30000000000000066`, 0.09729113780898258}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3, 0.09729113780898235}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox[
           RowBox[{"P", " ", 
             RowBox[{"(", 
               RowBox[{
                 SubscriptBox["\[Nu]", "e"], "\[RightArrow]", 
                 SubscriptBox["\[Nu]", "e"]}], ")"}]}], HoldForm], HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox[
          TagBox[
           RowBox[{"Energy", " ", "in", " ", "GeV"}], HoldForm], HoldForm], 
         TraditionalForm], None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Survival Probability of \\!\\(\\*SubscriptBox[\\(\[Nu]\\), \
\\(e\\)]\\) to \\!\\(\\*SubscriptBox[\\(\[Nu]\\), \\(e\\)]\\) in vacuum\"", 
       TraditionalForm], 
     PlotRange -> {{0.3, 10}, {0.09729113780898235, 0.9961474433692235}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"L=20000\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.7, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"L=10000\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0.5, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"L=1000\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.7, 0.7]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.7, 0.7]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0.7, 0.7]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"L=100\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.919391619755474*^9, 3.9193916549511766`*^9, {3.9193917287962537`*^9, 
   3.9193917489064612`*^9}, 3.922347456840982*^9, 3.9223475050159597`*^9, 
   3.922347836359702*^9, 3.922347868316444*^9, {3.9223479303181505`*^9, 
   3.922347948630876*^9}, {3.922348001748487*^9, 3.9223480074305477`*^9}, 
   3.9223480592064514`*^9, {3.9223503188157425`*^9, 3.9223503358914084`*^9}, 
   3.9223503749382086`*^9, {3.9223506551593943`*^9, 3.9223506818942876`*^9}, 
   3.922351097480164*^9, 3.9223511287959433`*^9, {3.9223511949239197`*^9, 
   3.9223512132333183`*^9}, 3.9223512582884316`*^9, 3.9223513200499*^9, 
   3.9223513607765245`*^9, 3.922351633174163*^9, {3.9223516638736677`*^9, 
   3.922351688183755*^9}, {3.922351735420989*^9, 3.92235178323668*^9}, 
   3.92235182848485*^9},
 CellLabel->
  "Out[8924]=",ExpressionUUID->"f82b7b55-6c42-49f6-809b-1c49d0d93957"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 579.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
CellContext->Notebook,
Magnification:>1. Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8626cabb-154a-43b3-8db3-2a7b186721ed"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 215, 4, 97, "Title",ExpressionUUID->"a0369676-97f0-42a8-957b-298f0d50b416"],
Cell[798, 28, 216, 5, 39, "Input",ExpressionUUID->"6e89639c-5773-4419-83ee-dbe2b8ceba41"],
Cell[CellGroupData[{
Cell[1039, 37, 13790, 369, 1244, "Input",ExpressionUUID->"711177da-3fcf-402c-9d1a-d8b0041025d6"],
Cell[14832, 408, 1134, 17, 46, "Output",ExpressionUUID->"f9b8fd22-ef25-4087-817f-85108aea5d55"],
Cell[15969, 427, 1842, 37, 80, "Output",ExpressionUUID->"2d4adad9-c9f9-4c94-bc8d-dcee6692b9cf"],
Cell[17814, 466, 1715, 35, 63, "Output",ExpressionUUID->"584089ea-4a16-4a5b-91a4-c62e1b5e3957"],
Cell[19532, 503, 1495, 29, 63, "Output",ExpressionUUID->"cbb9d573-ca23-422c-bf96-9d4edbb5164d"],
Cell[21030, 534, 1495, 29, 63, "Output",ExpressionUUID->"cd52abfa-2269-4c4d-9e35-f1c405a88ac1"],
Cell[22528, 565, 1715, 35, 63, "Output",ExpressionUUID->"7c4e688b-c73d-429a-a184-503c1d7c3ac2"],
Cell[24246, 602, 2056, 46, 63, "Output",ExpressionUUID->"3bd81c20-f2a8-4f12-8764-230a92de8efb"],
Cell[26305, 650, 36669, 645, 313, "Output",ExpressionUUID->"9ab75a5a-8723-4d03-98a3-fd7b2ab17559"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63011, 1300, 13006, 360, 1097, "Input",ExpressionUUID->"24c6734e-6577-4823-a9db-10804c771f79"],
Cell[76020, 1662, 1364, 30, 80, "Output",ExpressionUUID->"c9eecc66-9938-4acf-8692-09ff6c88cbfc"],
Cell[77387, 1694, 823, 13, 46, "Output",ExpressionUUID->"633cb856-cc8b-46c5-b245-c5d2bcd6e871"],
Cell[78213, 1709, 1534, 33, 80, "Output",ExpressionUUID->"0fdda15b-2c3d-41a5-8134-0ef6d8545bdb"],
Cell[79750, 1744, 1679, 39, 63, "Output",ExpressionUUID->"3025f83c-b60a-4998-addf-80791fabc168"],
Cell[81432, 1785, 17652, 334, 286, "Output",ExpressionUUID->"6d87981d-648f-400c-a3fa-6669e5d782d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99121, 2124, 12330, 349, 1092, "Input",ExpressionUUID->"e63c3f88-7ff7-4631-a8c0-607a063f5e18"],
Cell[111454, 2475, 1203, 27, 80, "Output",ExpressionUUID->"50a1b783-616f-4db4-875d-aeb12f23b8b8"],
Cell[112660, 2504, 661, 10, 46, "Output",ExpressionUUID->"2c43e7c7-7ccd-45c1-80ae-b7c542e78b6b"],
Cell[113324, 2516, 1371, 30, 80, "Output",ExpressionUUID->"042c4b83-124b-486a-86ca-c63be2c6a859"],
Cell[114698, 2548, 1498, 36, 63, "Output",ExpressionUUID->"266405ad-ad9c-468a-8ea7-ab099ced4b75"],
Cell[116199, 2586, 14126, 276, 284, "Output",ExpressionUUID->"970577eb-831a-4487-bb61-421cc7980fed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130362, 2867, 12550, 338, 1130, "Input",ExpressionUUID->"749b8b95-537f-4696-ad99-6897ccd8d9b0"],
Cell[142915, 3207, 927, 24, 80, "Output",ExpressionUUID->"1170ab05-ed33-4317-aa05-a9ab54a159c8"],
Cell[143845, 3233, 387, 7, 46, "Output",ExpressionUUID->"7fa2e12c-d672-4b7e-abef-7a26e2b10d1c"],
Cell[144235, 3242, 1095, 27, 80, "Output",ExpressionUUID->"f4cf022a-9a92-49ec-aad4-9c897e54e0e6"],
Cell[145333, 3271, 1243, 34, 63, "Output",ExpressionUUID->"0998a8dc-69d1-420e-87ca-93561baa0df7"],
Cell[146579, 3307, 41746, 729, 284, "Output",ExpressionUUID->"66228e93-1e71-4421-855a-ea09fc952fcc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188362, 4041, 1179, 30, 48, "Input",ExpressionUUID->"46505088-d736-42f5-8797-e3d74ef09d09"],
Cell[189544, 4073, 99409, 1740, 307, "Output",ExpressionUUID->"f82b7b55-6c42-49f6-809b-1c49d0d93957"]
}, Open  ]]
}, Open  ]]
}
]
*)

